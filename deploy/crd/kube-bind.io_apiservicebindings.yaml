apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.17.3
  name: apiservicebindings.kube-bind.io
spec:
  conversion:
    strategy: None
  group: kube-bind.io
  names:
    categories:
    - kube-bindings
    kind: APIServiceBinding
    listKind: APIServiceBindingList
    plural: apiservicebindings
    shortNames:
    - sb
    singular: apiservicebinding
  scope: Cluster
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.providerPrettyName
      name: Provider
      type: string
    - jsonPath: .metadata.annotations.kube-bind\.io/resources
      name: Resources
      priority: 1
      type: string
    - jsonPath: .status.conditions[?(@.type=="Ready")].status
      name: Ready
      type: string
    - jsonPath: .status.conditions[?(@.type=="Ready")].message
      name: Message
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: Age
      type: date
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: |-
          APIServiceBinding binds an API service represented by a APIServiceExport
          in a service provider cluster into a consumer cluster. This object lives in
          the consumer cluster.
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: |-
              spec specifies how an API service from a service provider should be bound in the
              local consumer cluster.
            properties:
              kubeconfigSecretRef:
                description: kubeconfigSecretName is the secret ref that contains
                  the kubeconfig of the service cluster.
                properties:
                  key:
                    description: The key of the secret to select from.  Must be "kubeconfig".
                    enum:
                    - kubeconfig
                    type: string
                  name:
                    description: Name of the referent.
                    minLength: 1
                    type: string
                  namespace:
                    description: Namespace of the referent.
                    minLength: 1
                    type: string
                required:
                - key
                - name
                - namespace
                type: object
                x-kubernetes-validations:
                - message: kubeconfigSecretRef is immutable
                  rule: self == oldSelf
            required:
            - kubeconfigSecretRef
            type: object
          status:
            description: status contains reconciliation information for a service
              binding.
            properties:
              conditions:
                description: conditions is a list of conditions that apply to the
                  APIServiceBinding.
                items:
                  description: Condition defines an observation of a object operational
                    state.
                  properties:
                    lastTransitionTime:
                      description: |-
                        Last time the condition transitioned from one status to another.
                        This should be when the underlying condition changed. If that is not known, then using the time when
                        the API field changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: |-
                        A human readable message indicating details about the transition.
                        This field may be empty.
                      type: string
                    reason:
                      description: |-
                        The reason for the condition's last transition in CamelCase.
                        The specific API may choose whether or not this field is considered a guaranteed API.
                        This field may not be empty.
                      type: string
                    severity:
                      description: |-
                        Severity provides an explicit classification of Reason code, so the users or machines can immediately
                        understand the current situation and act accordingly.
                        The Severity field MUST be set only when Status=False.
                      type: string
                    status:
                      description: Status of the condition, one of True, False, Unknown.
                      type: string
                    type:
                      description: |-
                        Type of condition in CamelCase or in foo.example.com/CamelCase.
                        Many .condition.type values are consistent across resources like Available, but because arbitrary conditions
                        can be useful (see .node.status.conditions), the ability to deconflict is important.
                      type: string
                  required:
                  - lastTransitionTime
                  - status
                  - type
                  type: object
                type: array
              providerPrettyName:
                description: |-
                  providerPrettyName is the pretty name of the service provider cluster. This
                  can be shared among different APIServiceBindings.
                type: string
            type: object
        type: object
    served: true
    storage: false
    subresources:
      status: {}
  - additionalPrinterColumns:
    - jsonPath: .status.providerPrettyName
      name: Provider
      type: string
    - jsonPath: .metadata.annotations.kube-bind\.io/resources
      name: Resources
      priority: 1
      type: string
    - jsonPath: .status.conditions[?(@.type=="Ready")].status
      name: Ready
      type: string
    - jsonPath: .status.conditions[?(@.type=="Ready")].message
      name: Message
      type: string
    - jsonPath: .metadata.creationTimestamp
      name: Age
      type: date
    name: v1alpha2
    schema:
      openAPIV3Schema:
        description: |-
          APIServiceBinding binds an API service represented by a APIServiceExport
          in a service provider cluster into a consumer cluster. This object lives in
          the consumer cluster.
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: |-
              spec specifies how an API service from a service provider should be bound in the
              local consumer cluster.
            properties:
              kubeconfigSecretRef:
                description: kubeconfigSecretName is the secret ref that contains
                  the kubeconfig of the service cluster.
                properties:
                  key:
                    description: The key of the secret to select from.  Must be "kubeconfig".
                    enum:
                    - kubeconfig
                    type: string
                  name:
                    description: Name of the referent.
                    minLength: 1
                    type: string
                  namespace:
                    description: Namespace of the referent.
                    minLength: 1
                    type: string
                required:
                - key
                - name
                - namespace
                type: object
                x-kubernetes-validations:
                - message: kubeconfigSecretRef is immutable
                  rule: self == oldSelf
              permissionClaims:
                description: PermissionClaims records decisions about permission claims
                  requested by the API service provider.
                items:
                  description: |-
                    ScopedPermissionClaim embeds a PermissionClaim and adds a selector to
                    scope down access to objects of the claimed resource.
                  properties:
                    group:
                      default: ""
                      description: |-
                        group is the name of an API group.
                        For core groups this is the empty string '""'.
                      pattern: ^(|[a-z0-9]([-a-z0-9]*[a-z0-9](\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*)?)$
                      type: string
                    identityHash:
                      default: ""
                      description: |-
                        This is the identity for a given APIExport that the APIResourceSchema belongs to.
                        The hash can be found on APIExport and APIResourceSchema's status.
                        It will be empty for core types.
                        Note that one must look this up for a particular KCP instance.
                      type: string
                    resource:
                      description: |-
                        resource is the name of the resource.
                        Note: it is worth noting that you can not ask for permissions for resource provided by a CRD
                        not provided by an service binding export.
                      pattern: ^[a-z][-a-z0-9]*[a-z0-9]$
                      type: string
                    selector:
                      description: |-
                        PermissionClaimSelector configures scoped access to objects
                        of a claimed resource.
                      properties:
                        matchAll:
                          description: matchAll grants access to all objects of the
                            claimed resource.
                          type: boolean
                        matchExpressions:
                          description: matchExpressions is a list of label selector
                            requirements. The requirements are ANDed.
                          items:
                            description: |-
                              A label selector requirement is a selector that contains values, a key, and an operator that
                              relates the key and values.
                            properties:
                              key:
                                description: key is the label key that the selector
                                  applies to.
                                type: string
                              operator:
                                description: |-
                                  operator represents a key's relationship to a set of values.
                                  Valid operators are In, NotIn, Exists and DoesNotExist.
                                type: string
                              values:
                                description: |-
                                  values is an array of string values. If the operator is In or NotIn,
                                  the values array must be non-empty. If the operator is Exists or DoesNotExist,
                                  the values array must be empty. This array is replaced during a strategic
                                  merge patch.
                                items:
                                  type: string
                                type: array
                                x-kubernetes-list-type: atomic
                            required:
                            - key
                            - operator
                            type: object
                          type: array
                          x-kubernetes-list-type: atomic
                        matchLabels:
                          additionalProperties:
                            type: string
                          description: |-
                            matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
                            map is equivalent to an element of matchExpressions, whose key field is "key", the
                            operator is "In", and the values array contains only "value". The requirements are ANDed.
                          type: object
                      type: object
                      x-kubernetes-map-type: atomic
                      x-kubernetes-validations:
                      - message: Permission claim selector is immutable
                        rule: self == oldSelf
                      - message: a selector is required. Only "matchAll" is currently
                          implemented
                        rule: (has(self.matchAll) && self.matchAll)
                    verbs:
                      description: |-
                        verbs is a list of supported API operation types (this includes
                        but is not limited to get, list, watch, create, update, patch,
                        delete, deletecollection, and proxy).
                      items:
                        type: string
                      minItems: 1
                      type: array
                      x-kubernetes-list-type: set
                  required:
                  - resource
                  - selector
                  - verbs
                  type: object
                type: array
                x-kubernetes-list-map-keys:
                - group
                - resource
                - identityHash
                x-kubernetes-list-type: map
            required:
            - kubeconfigSecretRef
            type: object
          status:
            description: status contains reconciliation information for a service
              binding.
            properties:
              boundSchemas:
                description: |-
                  BoundSchemas contains references to all BoundAPIResourceSchema objects
                  associated with this APIServiceBinding, tracking consumer usage status.
                items:
                  description: BoundSchemaReference contains a reference to a BoundAPIResourceSchema
                    with status information.
                  properties:
                    group:
                      default: ""
                      description: |-
                        group is the name of an API group.
                        For core groups this is the empty string '""'.
                      pattern: ^(|[a-z0-9]([-a-z0-9]*[a-z0-9](\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*)?)$
                      type: string
                    resource:
                      description: |-
                        resource is the name of the resource.
                        Note: it is worth noting that you can not ask for permissions for resource provided by a CRD
                        not provided by an service binding export.
                      pattern: ^[a-z][-a-z0-9]*[a-z0-9]$
                      type: string
                  required:
                  - resource
                  type: object
                minItems: 1
                type: array
              conditions:
                description: conditions is a list of conditions that apply to the
                  APIServiceBinding.
                items:
                  description: Condition defines an observation of a object operational
                    state.
                  properties:
                    lastTransitionTime:
                      description: |-
                        Last time the condition transitioned from one status to another.
                        This should be when the underlying condition changed. If that is not known, then using the time when
                        the API field changed is acceptable.
                      format: date-time
                      type: string
                    message:
                      description: |-
                        A human readable message indicating details about the transition.
                        This field may be empty.
                      type: string
                    reason:
                      description: |-
                        The reason for the condition's last transition in CamelCase.
                        The specific API may choose whether or not this field is considered a guaranteed API.
                        This field may not be empty.
                      type: string
                    severity:
                      description: |-
                        Severity provides an explicit classification of Reason code, so the users or machines can immediately
                        understand the current situation and act accordingly.
                        The Severity field MUST be set only when Status=False.
                      type: string
                    status:
                      description: Status of the condition, one of True, False, Unknown.
                      type: string
                    type:
                      description: |-
                        Type of condition in CamelCase or in foo.example.com/CamelCase.
                        Many .condition.type values are consistent across resources like Available, but because arbitrary conditions
                        can be useful (see .node.status.conditions), the ability to deconflict is important.
                      type: string
                  required:
                  - lastTransitionTime
                  - status
                  - type
                  type: object
                type: array
              permissionClaims:
                description: permissionClaims tracks the status of permission claims
                  from the provider.
                items:
                  description: AcceptablePermissionClaim is a PermissionClaim that
                    records if the user accepts or rejects it.
                  properties:
                    group:
                      default: ""
                      description: |-
                        group is the name of an API group.
                        For core groups this is the empty string '""'.
                      pattern: ^(|[a-z0-9]([-a-z0-9]*[a-z0-9](\.[a-z0-9]([-a-z0-9]*[a-z0-9])?)*)?)$
                      type: string
                    identityHash:
                      default: ""
                      description: |-
                        This is the identity for a given APIExport that the APIResourceSchema belongs to.
                        The hash can be found on APIExport and APIResourceSchema's status.
                        It will be empty for core types.
                        Note that one must look this up for a particular KCP instance.
                      type: string
                    resource:
                      description: |-
                        resource is the name of the resource.
                        Note: it is worth noting that you can not ask for permissions for resource provided by a CRD
                        not provided by an service binding export.
                      pattern: ^[a-z][-a-z0-9]*[a-z0-9]$
                      type: string
                    selector:
                      description: |-
                        PermissionClaimSelector configures scoped access to objects
                        of a claimed resource.
                      properties:
                        matchAll:
                          description: matchAll grants access to all objects of the
                            claimed resource.
                          type: boolean
                        matchExpressions:
                          description: matchExpressions is a list of label selector
                            requirements. The requirements are ANDed.
                          items:
                            description: |-
                              A label selector requirement is a selector that contains values, a key, and an operator that
                              relates the key and values.
                            properties:
                              key:
                                description: key is the label key that the selector
                                  applies to.
                                type: string
                              operator:
                                description: |-
                                  operator represents a key's relationship to a set of values.
                                  Valid operators are In, NotIn, Exists and DoesNotExist.
                                type: string
                              values:
                                description: |-
                                  values is an array of string values. If the operator is In or NotIn,
                                  the values array must be non-empty. If the operator is Exists or DoesNotExist,
                                  the values array must be empty. This array is replaced during a strategic
                                  merge patch.
                                items:
                                  type: string
                                type: array
                                x-kubernetes-list-type: atomic
                            required:
                            - key
                            - operator
                            type: object
                          type: array
                          x-kubernetes-list-type: atomic
                        matchLabels:
                          additionalProperties:
                            type: string
                          description: |-
                            matchLabels is a map of {key,value} pairs. A single {key,value} in the matchLabels
                            map is equivalent to an element of matchExpressions, whose key field is "key", the
                            operator is "In", and the values array contains only "value". The requirements are ANDed.
                          type: object
                      type: object
                      x-kubernetes-map-type: atomic
                      x-kubernetes-validations:
                      - message: Permission claim selector is immutable
                        rule: self == oldSelf
                      - message: a selector is required. Only "matchAll" is currently
                          implemented
                        rule: (has(self.matchAll) && self.matchAll)
                    state:
                      enum:
                      - Accepted
                      - Rejected
                      type: string
                    verbs:
                      description: |-
                        verbs is a list of supported API operation types (this includes
                        but is not limited to get, list, watch, create, update, patch,
                        delete, deletecollection, and proxy).
                      items:
                        type: string
                      minItems: 1
                      type: array
                      x-kubernetes-list-type: set
                  required:
                  - resource
                  - selector
                  - state
                  - verbs
                  type: object
                type: array
                x-kubernetes-list-map-keys:
                - group
                - resource
                - identityHash
                x-kubernetes-list-type: map
              providerPrettyName:
                description: |-
                  providerPrettyName is the pretty name of the service provider cluster. This
                  can be shared among different APIServiceBindings.
                type: string
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
